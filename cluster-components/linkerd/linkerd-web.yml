kind: Deployment
apiVersion: apps/v1
metadata:
  name: linkerd-web
  namespace: linkerd
  labels:
    app.kubernetes.io/name: web
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.9.3
    linkerd.io/control-plane-component: web
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.9.3
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: web
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-web
  template:
    metadata:
      labels:
        linkerd.io/control-plane-component: web
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-web
        linkerd.io/workload-ns: linkerd
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.9.3
        linkerd.io/identity-mode: default
        linkerd.io/proxy-version: stable-2.9.3
    spec:
      volumes:
        - name: linkerd-proxy-init-xtables-lock
          emptyDir: {}
        - name: linkerd-identity-end-entity
          emptyDir:
            medium: Memory
      initContainers:
        - name: linkerd-init
          image: 'ghcr.io/linkerd/proxy-init:v1.3.6'
          args:
            - '--incoming-proxy-port'
            - '4143'
            - '--outgoing-proxy-port'
            - '4140'
            - '--proxy-uid'
            - '2102'
            - '--inbound-ports-to-ignore'
            - '4190,4191,25,443,587,3306,11211,5432'
            - '--outbound-ports-to-ignore'
            - '25,443,587,3306,11211,5432'
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 10m
              memory: 10Mi
          volumeMounts:
            - name: linkerd-proxy-init-xtables-lock
              mountPath: /run
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: false
            runAsUser: 0
            runAsNonRoot: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      containers:
        - name: web
          image: 'ghcr.io/linkerd/web:stable-2.9.3'
          args:
            - '-api-addr=linkerd-controller-api.linkerd.svc.cluster.local:8085'
            - '-cluster-domain=cluster.local'
            - '-grafana-addr=linkerd-grafana.linkerd.svc.cluster.local:3000'
            - '-controller-namespace=linkerd'
            - '-log-level=info'
            - >-
              -enforced-host=^(localhost|127\.0\.0\.1|.*\.local|linkerd-web\.linkerd\.svc\.cluster\.local|linkerd-web\.linkerd\.svc|\[::1\])(:\d+)?$
          ports:
            - name: http
              containerPort: 8084
              protocol: TCP
            - name: admin-http
              containerPort: 9994
              protocol: TCP
          resources: {}
          livenessProbe:
            httpGet:
              path: /ping
              port: 9994
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 9994
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 7
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 2103
        - name: linkerd-proxy
          image: 'ghcr.io/linkerd/proxy:stable-2.9.3'
          ports:
            - name: linkerd-proxy
              containerPort: 4143
              protocol: TCP
            - name: linkerd-admin
              containerPort: 4191
              protocol: TCP
          env:
            - name: LINKERD2_PROXY_LOG
              value: 'warn,linkerd=info'
            - name: LINKERD2_PROXY_LOG_FORMAT
              value: plain
            - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
              value: 'linkerd-dst-headless.linkerd.svc.cluster.local:8086'
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
              value: '10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16'
            - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
              value: 100ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
              value: 1000ms
            - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
              value: '0.0.0.0:4190'
            - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
              value: '0.0.0.0:4191'
            - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
              value: '127.0.0.1:4140'
            - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
              value: '0.0.0.0:4143'
            - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
              value: svc.cluster.local.
            - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
              value: 10000ms
            - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
              value: 10000ms
            - name: _pod_ns
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: _pod_nodeName
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: LINKERD2_PROXY_DESTINATION_CONTEXT
              value: |
                {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
            - name: LINKERD2_PROXY_IDENTITY_DIR
              value: /var/run/linkerd/identity/end-entity
            - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
              value: |
                -----BEGIN CERTIFICATE-----
                MIIBgzCCASmgAwIBAgIBATAKBggqhkjOPQQDAjApMScwJQYDVQQDEx5pZGVudGl0
                eS5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjEwMjEwMTgyNTU4WhcNMjIwMjEw
                MTgyNjE4WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJkLmNsdXN0ZXIubG9j
                YWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARVP9Yi5mgokSVxtTCup/YHpBsg
                do3MOd6KbZwx2tgC5WjFxQ4zSEeFl4JGB+CjRzf1NffyuGPNZ1vNAv3RNJ2fo0Iw
                QDAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMC
                MA8GA1UdEwEB/wQFMAMBAf8wCgYIKoZIzj0EAwIDSAAwRQIhANbCivXzHcPy56tm
                Se7fq3CM0SCPzZzQliG7O1PgpYPBAiAtZMBKV37aejzHq4WCOWRuOTB2Uzmb0IKi
                5+OuUzWEGQ==
                -----END CERTIFICATE-----
            - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
              value: 'linkerd-identity-headless.linkerd.svc.cluster.local:8080'
            - name: _pod_sa
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: _l5d_ns
              value: linkerd
            - name: _l5d_trustdomain
              value: cluster.local
            - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
              value: >-
                $(_pod_sa).$(_pod_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
              value: >-
                linkerd-identity.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
              value: >-
                linkerd-destination.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
            - name: LINKERD2_PROXY_TAP_SVC_NAME
              value: >-
                linkerd-tap.$(_l5d_ns).serviceaccount.identity.$(_l5d_ns).$(_l5d_trustdomain)
          resources: {}
          volumeMounts:
            - name: linkerd-identity-end-entity
              mountPath: /var/run/linkerd/identity/end-entity
          livenessProbe:
            httpGet:
              path: /live
              port: 4191
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 4191
              scheme: HTTP
            initialDelaySeconds: 2
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 2102
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      nodeSelector:
        beta.kubernetes.io/os: linux
      serviceAccountName: linkerd-web
      serviceAccount: linkerd-web
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

